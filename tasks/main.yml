---
- name: load variables
  include_vars: "main.yml"

- name: check if this is a Raspberry Pi system
  set_fact:
    is_pi: (ansible_lsb is defined) and (ansible_lsb.id == "Raspbian")

- name: create greenpithumb groups
  group:
    name: "{{ item }}"
    state: "present"
  with_items:
    - "{{ greenpithumb_backend_group }}"
    - "{{ greenpithumb_frontend_group }}"

- name: create greenpithumb users
  user:
    name: "{{ item.user }}"
    group: "{{ item.group }}"
    system: "yes"
  with_items:
    - user: "{{ greenpithumb_backend_user }}"
      group: "{{ greenpithumb_backend_group }}"
    - user: "{{ greenpithumb_frontend_user }}"
      group: "{{ greenpithumb_frontend_group }}"

- name: add Adafruit apt repository
  apt_repository:
    repo: deb http://apt.adafruit.com/raspbian/ jessie main
    state: present
  when: is_pi
  register: add_adafruit_repo

- name: add Adafruit apt key
  apt_key:
    url: https://apt.adafruit.com/apt.adafruit.com.gpg.key
    state: present
  when: is_pi
  register: add_adafruit_key

- name: update apt cache
  apt:
    update_cache: true
  when: "add_adafruit_repo.changed or add_adafruit_key.changed"

- name: install Adafruit node.js package
  apt:
    name: node
    state: installed
  when: is_pi

- name: install necessary packages
  apt:
    name: "{{ item }}"
    state: installed
  with_items:
    - build-essential
    - git
    - python-dev
    - python-openssl
    - python-pip

- name: configure Raspberry Pi camera
  include: "camera.yml"
  when: is_pi

- name: install libraries
  pip:
    name: "{{ item }}"
  with_items:
    - adafruit-mcp3008
    - RPi.GPIO

- name: download Adafruit DHT library
  git:
    repo: https://github.com/adafruit/Adafruit_Python_DHT
    version: master
    dest: "{{ __greenpithumb_adafruit_dht_tmp_path }}"
  notify:
    - install Adafruit DHT library

# The Adafruit DHT library will refuse to install on non SBC machines, so if
# the target machine is not ARM-based, assume this is an install on a test
# machine and add the force test parameter.
- name: set Adafruit DHT library test compatibility
  set_fact:
    greenpithumb_adafruit_dht_extra_args: "--force-test"
  when: "'arm' not in ansible_machine"

- name: download greenpithumb backend code
  git:
    repo: "{{ greenpithumb_git_repo }}"
    dest: "{{ greenpithumb_backend_path }}"
    version: "{{ greenpithumb_git_version }}"
  notify:
    - set greenpithumb backend file permissions
    - restart greenpithumb-backend

- name: install greenpithumb dependencies
  pip:
    requirements: "{{ greenpithumb_backend_path }}/requirements.txt"

- name: create wiring config
  copy:
    src: "{{ greenpithumb_backend_path }}/greenpithumb/wiring_config.ini.example"
    dest: "{{ greenpithumb_backend_path }}/greenpithumb/wiring_config.ini"
    owner: "{{ greenpithumb_backend_user }}"
    group: "{{ greenpithumb_backend_group }}"
    mode: 0444
    remote_src: yes

- name: create greenpithumb data folders
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ greenpithumb_backend_user }}"
    group: "{{ greenpithumb_backend_group }}"
    mode: 0755
  with_items:
    - "{{ greenpithumb_data_path }}"
    - "{{ greenpithumb_images_path }}"

- name: create diagnostics scripts paths
  file:
    path: "{{ greenpithumb_diagnostic_path }}"
    state: directory
    owner: "{{ greenpithumb_backend_user }}"
    group: "{{ greenpithumb_backend_group }}"
    mode: 0755
  when: greenpithumb_diagnostics_enabled

- name: install diagnostic scripts
  copy:
    src: "{{ item }}"
    dest: "{{ greenpithumb_diagnostic_path }}/{{ item }}"
    owner: "{{ greenpithumb_backend_user }}"
    group: "{{ greenpithumb_backend_group }}"
    mode: 0777
  with_items:
    - test_dht11.py
    - test_light_sensor.py
    - test_pump.py
    - test_soil_moisture_sensor.py
  when: greenpithumb_diagnostics_enabled

- name: download greenpithumb frontend code
  git:
    repo: "{{ greenpithumb_frontend_git_repo }}"
    dest: "{{ greenpithumb_frontend_path }}"
    version: "{{ greenpithumb_frontend_git_version }}"
  notify:
    - set greenpithumb frontend file permissions
    - restart greenpithumb-frontend

- name: install greenpithumb frontend dependencies
  pip:
    requirements: "{{ greenpithumb_frontend_path }}/requirements.txt"
  notify:
    - restart greenpithumb-frontend

- name: download greenpithumb frontend static files
  git:
    repo: "{{ greenpithumb_frontend_static_git_repo }}"
    dest: "{{ greenpithumb_frontend_static_root }}"
    version: "{{ greenpithumb_frontend_static_git_version }}"
  notify:
    - set greenpithumb frontend static file permissions
    - install greenpithumb frontend static dependencies

- name: create npm folder locations
  file:
    path: "/var/www/{{ item }}"
    state: directory
    owner: "{{ nginx_user }}"
  with_items:
    - .cache
    - .config
    - .local
    - .npm

- name: symlink frontend to images path
  file:
    src: "{{ greenpithumb_images_path }}"
    dest: "{{ greenpithumb_frontend_static_root }}/app/images"
    owner: "{{ nginx_user }}"
    state: link

- name: copy greenpithumb backend systemd service file
  template:
    src: greenpithumb-backend.service.j2
    dest: /etc/systemd/system/greenpithumb-backend.service
    mode: 0644
  notify:
    - reload systemd configs
    - restart greenpithumb-backend

- name: enable greenpithumb backend to start at boot
  service:
    name: greenpithumb-backend
    enabled: yes

- name: copy greenpithumb frontend systemd service file
  template:
    src: greenpithumb-frontend.service.j2
    dest: /etc/systemd/system/greenpithumb-frontend.service
    mode: 0644
  notify:
    - reload systemd configs
    - restart greenpithumb-frontend

- name: enable greenpithumb frontend to start at boot
  service:
    name: greenpithumb-frontend
    enabled: yes
